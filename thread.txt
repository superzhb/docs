多线程
1、什么是线程同步
线程同步保证线程对共享资源访问的正确性，如果没有同步，一个线程在修改数据时，另外一个程序访问数据则会出错。
2.Thread 的start()和run()方法
start()方法表示线程已就绪，得到cpu的时间片，jvm会调用run方法开始执行
3.ThreadLocal
维护了针对每个线程的变量，修改时不受别的线程的干扰，当多个线程访问这个变量时，每个线程维护单独的副本。
4.volatile关键字
表示直接从寄存器读取值，他的改变对所有线程都是可见的，所以每次取值都是取到的是最新值
5.多线程有什么用
发挥多核CPU的优势（在单核CPU上使用多线程会降低效率）
处理时间长的操作，防止阻塞
6.Runnable和Callable接口的区别
Runnable接口实现了run方法，它没有返回值，他所做的就是单纯的执行run方法里面的代码。
Callable接口的call方法是有返回值的，他和Future接口合作可以得到异步执行代码的结果。
7.实现同步的方法
synchronized关键字，同步方法和同步块
线程在执行同步方法的时候具有排他性，当一个对象进去一个对象的一个同步方法时，这个对象的所有同步方法都被锁定住了。其他线程都不能访问他的同步方法，但是可以
他的非同步方法
8.sleep和wait方法
sleep是Thread的方法，暂停线程的运行，不释放对象锁
wait是Object的方法，对此对象调用该方法会导致本线程放弃对象锁，调用wait后，需要别的线程执行notify/notifyAll才能够重新获得CPU执行时间。
