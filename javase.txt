1.java集合框架
Collection和Map
Collection包括List和Set
Map包括HashMap和HashTable

List:
1)ArrayList 底层实现是可以扩容的数组，特点查找快，插入、删除慢
2)LinkedList 底层采用双向链表的结构，特点查找慢，插入、删除快

set
1)hashSet 底层采用HashMap实现，实际是存储了HashMap的key

map
1)HashMap 底层采用数组和链表，key是一个数组，每一个value是一个链表，键值都可以是null，如果key相同，后加入的会覆盖先加入的

2.static 
1）用static修饰的的代码块叫做静态代码块，该类被加载的时候就会执行，
2）static修饰的变量，被static修饰的变量叫静态变量，没有被static修饰的变量叫局部变量。对于静态变量，在内存中只分配一次内存，局部变量在每次初始化的时候会分配。
3）static修饰的方法，静态方法，可以通过类名直接调用，只能访问静态成员变量和静态方法，因为实例变量与特定的对象相关联，没有new就没有对象

3.接口和抽象类的区别
接口中的方法都是抽象的，抽象类中的方法可以是抽象的，也可以是非抽象的
一个类只能继承一个抽象类，但是可以实现多个接口
一个类继承抽象类，可以不实现他所有的方法，但是此时这个类本身也需要是抽象的
接口中的变量都是final的，接口中的方法都是public的

4.进程和线程的区别
进程是一个应用程序，线程是进程内部的一个执行序列，一个进程可以有多个线程

5.Comparable和Comparator的区别
Comparator是javabean实现Comparable接口，在实体类内部比较
Comparator是创建一个比较器，作为参数在Collections.sort()方法内传入，也可以直接比较两个实例

6.ConcurrentHashMap 的高并发性主要来自三个方面
1）使用分离锁机制，可以供多个线程安全的访问
2）用 HashEntery 对象的不变性来降低执行读操作的线程在遍历链表期间对加锁的需求。
3）通过对同一个 volatile 变量的写 / 读访问，协调不同线程间读 / 写操作的内存可见性。


















